openapi: 3.0.0
info:
  title: d-cide api
  version: '1.0'
  contact:
    name: Christian JÃ¶cker
    email: kontakt@cjoecker.de
servers:
  - url: API
paths:
  /decisions:
    get:
      summary: get all decisions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
              examples:
                Example:
                  value:
                    - id: 1
                      name: Very important decisions
                    - id: 2
                      name: Just another decisions
      tags:
        - Decisions
  '/decisions/{decisionId}/decisionOptions':
    parameters:
      - name: decisionId
        in: path
        required: true
        schema:
          type: number
    get:
      summary: get all decision options
      tags:
        - Decision Options
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                    score:
                      type: number
              examples:
                Examle:
                  value:
                    - id: 1
                      name: To be
                      score: 0
                    - id: 2
                      name: Not to be
                      score: 0
      operationId: ''
      parameters:
        - schema:
            type: boolean
          in: query
          name: calculatedRating
          description: calculate decision options rating
  '/decisions/{decisionId}/decisionOptions/{decisionOptionId}':
    parameters:
      - name: decisionId
        in: path
        required: true
        schema:
          type: number
      - name: decisionOptionId
        in: path
        required: true
        schema:
          type: number
    post:
      summary: create one decision option
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                  score:
                    type: number
              examples:
                Example:
                  value:
                    id: 1
                    name: To be
                    score: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
            examples:
              Example:
                value:
                  name: To be
      tags:
        - Decision Options
    put:
      summary: edit one decision option
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                  score:
                    type: number
              examples:
                Example:
                  value:
                    id: 1
                    name: Not to be
                    score: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                name:
                  type: string
              required:
                - id
                - name
            examples:
              Example:
                value:
                  id: 1
                  name: Not to be
      tags:
        - Decision Options
    delete:
      summary: delete one decision option
      responses:
        '200':
          description: OK
      tags:
        - Decision Options
  /decisions/:
    post:
      summary: create one decision
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
              examples:
                Example:
                  value:
                    id: 1
                    name: very important decision
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
            examples:
              Example:
                value:
                  name: Very important decision
      tags:
        - Decisions
    put:
      summary: edit one decision
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
              examples:
                Example:
                  value:
                    id: 1
                    name: Very important decision
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                name:
                  type: string
                user:
                  type: object
                  description: 'user is sent, when the user of a decision wants to be changed (e.g. from an unregistered to a registered user)'
                  properties:
                    username:
                      type: string
                    password:
                      type: string
              required:
                - id
                - name
            examples:
              Example:
                value:
                  id: 1
                  name: Very important decision
                  user:
                    username: peter@parker.com
                    password: spiderman
      tags:
        - Decisions
  '/decisions/{decisionId}':
    get:
      summary: get one decision
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
              examples:
                Example:
                  value:
                    id: 1
                    name: Very important decision
      tags:
        - Decisions
    parameters:
      - schema:
          type: number
        name: decisionId
        in: path
        required: true
    delete:
      summary: delete one decision
      responses:
        '200':
          description: OK
      tags:
        - Decisions
  /users/:
    post:
      summary: create one user (user signup)
      tags:
        - Users
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  username:
                    type: string
                  fullName:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Email
                fullName:
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
              required:
                - username
                - fullName
                - password
                - confirmPassword
            examples:
              Example:
                value:
                  username: peter@parker.com
                  fullName: Peter Parker
                  registeredUser: 'true'
                  password: spiderman
                  confirmPassword: spiderman
  /sessions/:
    post:
      summary: create one session (user login - anonym or not)
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
              examples:
                Example:
                  value:
                    success: true
                    token: Bearer eyJhbGciOiJIUzUxMiaa.eyJyZWdpc3RlcmVkVXNlciI6dHJ1ZSwiZnVsbE5hbWUiOiJjaHJpc3RpYW4gam9lY2tlciIsImlkIjoxNSwiZXhwIjoxNTc1NTE4NzkzLCJpYXQiOjE1NzUyMTg3OTMsInVzZXJuYW1lIjoiY2hyaXN0aWFuQGpvZWNrZXIuY29tIn0.tqHjiM8OeR59EXm2kKEAzueWH-cc8pW447b0pqXi9ibpaRqdCXFcb55Gcm0f7AkDMb2gDjfE_3JZhXMaGs7g
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
            examples:
              Example:
                value:
                  username: peter@parker.com
                  password: spiderman
      tags:
        - Users
  /sessions/unregistered:
    post:
      summary: create one unregistered user session (create anonym user)
      tags:
        - Users
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
              examples:
                Example:
                  value:
                    success: true
                    token: Bearer eyJhbGciOiJIUzUxMiJ9.eyJyZWdpc3RlbbVkVXNlciI6ZmFsc2UsImZ1bGxOYW1lIjoiVW5yZWdpc3RlcmVkIFVzZXIgNzAiLCJpZCI6MTAyLCJleHAiOjE1NzU1MTk0NTQsImlhdCI6MTU3NTIxOTQ1NCwidXNlcm5hbWUiOiI3MEBVbnJlZ2lzdGVyZWRVc2VyLmNvbSJ9.Ff3p8ZW4FWXYUvzLXg3gNYWb101Ffm8rA9nnaU-6z8RUygAtxE1avgf91Vn9Uuz0YlA_toJi0HnSuyq6CVwNwQ
  '/decisions/{decisionId}/selectionCriteria':
    parameters:
      - name: decisionId
        in: path
        required: true
        schema:
          type: number
    get:
      summary: get all selection criteria
      tags:
        - Selection Criteria
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                    score:
                      type: number
              examples:
                Examle:
                  value:
                    - id: 1
                      name: To be
                      score: 0
                    - id: 2
                      name: Not to be
                      score: 0
      parameters:
        - schema:
            type: boolean
          in: query
          name: calculatedRating
          description: calculate selection criteria rating
  '/decisions/{decisionId}/selectionCriteria/{decisionOptionId}':
    parameters:
      - name: decisionId
        in: path
        required: true
        schema:
          type: number
      - name: decisionOptionId
        in: path
        required: true
        schema:
          type: number
    post:
      summary: create one decision option
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                  score:
                    type: number
              examples:
                Example:
                  value:
                    id: 1
                    name: To be
                    score: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
            examples:
              Example:
                value:
                  name: To be
      tags:
        - Selection Criteria
    put:
      summary: edit one decision option
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                  score:
                    type: number
              examples:
                Example:
                  value:
                    id: 1
                    name: Not to be
                    score: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                name:
                  type: string
              required:
                - id
                - name
            examples:
              Example:
                value:
                  id: 1
                  name: Not to be
      tags:
        - Selection Criteria
    delete:
      summary: delete one decision option
      responses:
        '200':
          description: OK
      tags:
        - Selection Criteria
  '/decisions/{decisionId}/weightedCriteria':
    parameters:
      - schema:
          type: string
        name: decisionId
        in: path
        required: true
    get:
      summary: get all weighted criteria
      tags:
        - Weighted Criteria
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    weight:
                      type: number
                      description: |-
                        If weight <= 0 Then selected criteria is selectionCriteria1Id
                        If weight > 0 Then selected criteria is selectionCriteria2Id
                    selectionCriteria1Id:
                      type: number
                    selectionCriteria2Id:
                      type: number
              examples:
                Example:
                  value:
                    - id: 1
                      weight: -27
                      selectionCriteria1Id: 747
                      selectionCriteria2Id: 746
                    - id: 2
                      weight: 0
                      selectionCriteria1Id: 747
                      selectionCriteria2Id: 745
                    - id: 3
                      weight: 100
                      selectionCriteria1Id: 746
                      selectionCriteria2Id: 745
      operationId: ''
    put:
      summary: edit all weighted criteria
      operationId: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples: {}
      tags:
        - Weighted Criteria
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: number
                  weight:
                    type: number
                required:
                  - id
                  - weight
            examples:
              Example:
                value:
                  - id: 1
                    weight: -27
                  - id: 2
                    weight: 0
                  - id: 3
                    weight: 100
  '/decisions/{decisionId}/ratedOptions':
    parameters:
      - schema:
          type: string
        name: decisionId
        in: path
        required: true
    get:
      summary: get all rated options
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    score:
                      type: number
                      description: ''
                    decisionOptionId:
                      type: number
                    selectionCriteriaId:
                      type: number
              examples:
                Example:
                  value:
                    - id: 1
                      score: 0
                      decisionOptionId: 1
                      selectionCriteriaId: 1
                    - id: 2
                      score: 10
                      decisionOptionId: 1
                      selectionCriteriaId: 2
                    - id: 3
                      score: 100
                      decisionOptionId: 1
                      selectionCriteriaId: 3
      operationId: ''
      tags:
        - Rated Options
    put:
      summary: edit all rated options
      operationId: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples: {}
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  rating:
                    type: number
                  decisionOptionId:
                    type: number
                  selectionCriteriaId:
                    type: number
                required:
                  - rating
                  - decisionOptionId
                  - selectionCriteriaId
            examples:
              Example:
                value:
                  - rating: 23
                    decisionOptionId: 7
                    selectionCriteriaId: 5
                  - rating: 100
                    decisionOptionId: 7
                    selectionCriteriaId: 6
      tags:
        - Rated Options
components:
  schemas: {}
